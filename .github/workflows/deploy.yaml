on:
  workflow_call:
    inputs: 
      environment: 
        type: string
        required: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Build functions
        uses: "./.github/worflows/templates/composite_node_yarn.yml@main"

      - name: Make the azure function app artifact
        id: make_artifact
        run: |
          zip -r io-functions-service-messages.zip .
          echo "artifact-path=$(realpath io-functions-service-messages.zip)" >> "$GITHUB_OUTPUT"
        shell: bash
      
      - name: Upload functions artifact
        uses: actions/upload-artifact@v3
        with:
          path: ${{ steps.make_artifact.outputs.artifact-path }}

  deploy:
    name: Deploy Function App
    if: ${{ !github.event.act }}
    needs: [build]
    runs-on: self-hosted
    environment: ${{ inputs.environment }}-cd

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download functions artifact
        uses: actions/download-artifact@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Function App to Staging Slot
        uses: azure/webapps-deploy@v2
        with:
          resource-group-name: ${{ vars.AZURE_WEB_APP_RESOURCE_GROUP }}
          app-name: ${{ vars.AZURE_WEB_APP_NAME }}
          slot-name: staging
          package: io-functions-service-messages.zip

      - name: Check Staging Health
        run: curl --retry 5 --retry-max-time 120 --retry-all-errors -f 'https://${{ vars.AZURE_WEB_APP_NAME }}-staging.azurewebsites.net${{ vars.HEALTH_CHECK_PATH }}'

      - name: Swap Staging and Production Slots
        run: az webapp deployment slot swap -g ${{ vars.AZURE_WEB_APP_RESOURCE_GROUP }} -n ${{ vars.AZURE_WEB_APP_NAME }} --slot staging --target-slot production