swagger: '2.0'
info:
  version: 0.0.1
  title: IO API for service Messages
  contact:
    name: PagoPA
    url: https://forum.italia.it/c/progetto-io
  x-logo:
    url: https://io.italia.it/assets/img/io-logo-blue.svg
  description: >
    # Warning

    **This is an experimental API that is (most probably) going to change as we
    evolve the IO platform.**

    # Introduction

    This is the documentation of the IO API for App.
host: api.cd.italia.it
basePath: /api/v1
schemes:
  - https
security:
  - SubscriptionKey: []
paths:
  /ping:
    get:
      operationId: pingOperation
      summary: Ping
      description: Returns function's package name and version
      tags:
        - restricted
      responses:
        '200':
          description: Success.
        '500':
          description: Internal Server error
  /notify:
    post:
      operationId: notify
      summary: Notify a user
      description: Post the notification to the user using a push notification.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NotificationInfo'
      responses:
        '204':
          description: Success.
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ProblemJson'
        '401':
          description: Token null or invalid.
        '403':
          description: Request not authorized.
        '404':
          description: Resource not found.
        '500':
          description: >-
            There was an error in forwarding the notification.
          schema:
            $ref: '#/definitions/ProblemJson'
      consumes:
        - application/json
      produces:
        - application/json

  /remote-contents/configurations:
    post:
      operationId: createRCConfiguration
      summary: Create a new remote-content configuration
      description: Create a new remote-content configuration using the provided payload
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NewRCConfiguration'
      responses:
        '201':
          description: Configuration created
          schema:
            $ref: '#/definitions/RCConfigurationId'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ProblemJson'
        '500':
          description: >-
            There was an error creating the configuration.
          schema:
            $ref: '#/definitions/ProblemJson'
      consumes:
        - application/json
      produces:
        - application/json

  /remote-contents/configurations/{configurationId}:
    put:
      operationId: updateRCConfiguration
      summary: Update an existing remote-content configuration
      description: Update an existing remote-content configuration using the provided payload
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NewRCConfiguration'
        - in: path
          name: configurationId
          required: true
          schema:
            $ref: '#/definitions/RCConfigurationId'
      responses:
        '204':
          description: Configuration updated
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ProblemJson'
        '404':
          description: Resource not found.
        '500':
          description: >-
            There was an error updating the configuration.
          schema:
            $ref: '#/definitions/ProblemJson'
      consumes:
        - application/json
      produces:
        - application/json

definitions:
  RCConfigurationId:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/Ulid"
  NewRCConfiguration:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/NewRCConfiguration"
  NewRCConfigurationBase:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/NewRCConfigurationBase"
  RCConfigurationBase:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/RCConfigurationBase"
  RCConfigurationEnvironment:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/RCConfigurationEnvironment"
  RCConfigurationWithTestEnvironment:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/RCConfigurationWithTestEnvironment"
  RCConfigurationWithProdEnvironment:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/RCConfigurationWithProdEnvironment"
  RCConfigurationWithProdAndTestEnvironment:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/RCConfigurationWithProdAndTestEnvironment"
  RCConfigurationProdEnvironment:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/RCConfigurationProdEnvironment"
  RCAuthenticationConfig:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/RCAuthenticationConfig"
  RCClientCert:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/RCClientCert"
  RCConfigurationTestEnvironment:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/RCConfigurationTestEnvironment"
  NotificationType:
    type: string
    enum:
     - MESSAGE
     - REMINDER_READ
     - REMINDER_PAYMENT
     - REMINDER_PAYMENT_LAST
  NotificationInfo:
    type: object
    properties:
      notification_type: 
        $ref: "#/definitions/NotificationType"
      fiscal_code:
        $ref: "#/definitions/FiscalCode"
      message_id:
        type: string
        minLength: 1
    required:
      - notification_type
      - fiscal_code
      - message_id
  ProblemJson:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/ProblemJson"
  FiscalCode:
    $ref: "../node_modules/@pagopa/io-functions-commons/openapi/definitions.yaml#/FiscalCode"
securityDefinitions:
  SubscriptionKey:
    type: apiKey
    name: X-Functions-Key
    in: header
    description: The API key obtained through the developer portal.
