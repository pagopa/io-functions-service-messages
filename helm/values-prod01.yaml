microservice-chart:
  image:
    repository: 'iopcommonacr.azurecr.io/io-functions-service-messages'
    tag: '1.2.3'
    pullPolicy: Always
  namespace: 'messages'
  livenessProbe:
    httpGet:
      path: '/api/live'
      port: 80
    initialDelaySeconds: 30
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: '/api/ready'
      port: 80
    initialDelaySeconds: 30
    failureThreshold: 6
    periodSeconds: 10
  service:
    create: true
    ports:
      - 80
  ingress:
    create: true
    host: 'weuprod01.messages.internal.io.pagopa.it'
    path: '/service-messages/(.*)'
    servicePort: 80
  resources:
    requests:
      memory: '512Mi'
      cpu: '200m'
    limits:
      memory: '512Mi'
      cpu: '200m'
  autoscaling:
    enable: true
    minReplica: 2
    maxReplica: 10
    pollingInterval: 30 # seconds
    cooldownPeriod: 300 # seconds
    triggers:
      - type: cpu
        metadata:
          type: Utilization
          value: '70'
  tmpVolumeMount:
    create: true
    mounts: [{name: "tmp", mountPath: "/tmp"}]
  securityContext:
    capabilities:
      drop: []
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
  envConfig:
    # required
    NODE_ENV: 'production'
    WEBSITE_NODE_DEFAULT_VERSION: '18.13.0'
    WEBSITE_SITE_NAME: 'io-p-weuprod01-functions-service-messages' # required to show cloud role name in application insights
    FUNCTIONS_WORKER_PROCESS_COUNT: '4'
    FETCH_KEEPALIVE_ENABLED: 'true'
    FETCH_KEEPALIVE_FREE_SOCKET_TIMEOUT: '30000'
    FETCH_KEEPALIVE_MAX_FREE_SOCKETS: '10'
    FETCH_KEEPALIVE_MAX_SOCKETS: '40'
    FETCH_KEEPALIVE_SOCKET_ACTIVE_TTL: '110000'
    FETCH_KEEPALIVE_TIMEOUT: '60000'
    # app specific
    COSMOSDB_URI: 'https://io-p-cosmos-api.documents.azure.com:443/'
    COSMOSDB_NAME: 'db'
    MESSAGE_CONTAINER_NAME: 'message-content'
    # io-backend endpoint
    BACKEND_BASE_URL: 'https://io-p-app-appbackendli.azurewebsites.net'
    # fn-pushnotification queue
    NOTIFICATION_QUEUE_NAME: 'push-notifications'
  envSecret:
    # required
    APPINSIGHTS_INSTRUMENTATIONKEY: 'appinsights-instrumentation-key'
    # app specific
    COSMOSDB_KEY: 'io-p-cosmos-api-master-key'
    QueueStorageConnection: 'iopmessagesweuprod01svst-connection-string'
    # message content storage conn string
    MESSAGE_CONTENT_STORAGE_CONNECTION_STRING: 'iopstapi-connection-string'
    # io-backend endpoint token
    BACKEND_TOKEN: 'appbackendli-token'
    # fn-pushnotification queue conn string
    NOTIFICATION_QUEUE_STORAGE_CONNECTION_STRING: 'iopweumessagesnotifst-connection-string'
    # beta testers
    FF_BETA_TESTERS: 'ff-beta-testers'
  keyvault:
    name: 'io-p-messages-kv'
    tenantId: '7788edaf-0346-4068-9d79-c868aed15b3d'
